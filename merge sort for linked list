class Solution
{
    //Function to sort the given linked list using Merge Sort.
    static Node mergeSort(Node head)
    {
        // add your code here
        if(head==null || head.next==null) return head;
        
        Node temp=head;
        Node middle=getMid(head);
        Node head2=middle.next;
        middle.next=null;
        
        Node lHead=mergeSort(head);
        Node rHead=mergeSort(head2);
        Node ans =merge(lHead,rHead);
        return ans;
    }
    public static Node merge(Node head1,Node head2){
        Node dummy = new Node(-1);
        Node t=dummy;
        Node l1=head1;
        Node l2=head2;
        while(l1!=null && l2!=null){
            if(l1.data<=l2.data){
                t.next=l1;
                l1=l1.next;
                t=t.next;
            }else{
                t.next=l2;
                l2=l2.next;
                t=t.next;
            }
        }
        if(l1!=null){
            t.next=l1;
        }else{
            t.next=l2;
        }
        return dummy.next;
    }
    
    public static Node getMid(Node head){
        Node slow=head;
        Node fast=head;
        while(fast.next!=null && fast.next.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }
}
