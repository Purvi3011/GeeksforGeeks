class Solution
{
    
        public static int lcs(String s1,String s2,int n1,int n2){
        int [][] dp = new int[n1+1][n2+1];
        for(int i=0;i<=n1;i++ ){
            for (int j=0;j<=n2;j++){
                if(i==0||j==0){
                    dp[i][j]=0;
                }
            }
        }
          for(int i=1;i<=n1;i++ ){
            for (int j=1;j<=n2;j++){
                if(s1.charAt(i-1)==s2.charAt(j-1)&&i!=j){
                    dp[i][j]=dp[i-1][j-1]+1;
                }
                else{
                    dp[i][j]=Math.max(dp[i][j-1],dp[i-1][j]);
                }
            }
        }
        return dp[n1][n2];
    }

    public int LongestRepeatingSubsequence(String str)
    {
      return lcs(str,str,str.length(),str.length());
    }
}
